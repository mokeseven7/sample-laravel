name: Deploy

on:
  push:
    branches: main

jobs:
  deploy:
    name: Deploy my app

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: http://stagesop.apgteam.com/
          environment: production

      - name: Deploy my app
        run: |
          curl -X POST ${{secrets.ENVOYER_URL}} -H 'Authorization: Bearer ${{secrets.ENVOYER_TOKEN}}' \
          -H 'Content-Type: application/json' --data-raw '{ "from": "branch", "branch": "master"}' && \
          echo "Deployment Hook Hit"

      - name: Check Status
        run: |
          curl -X GET ${{secrets.ENVOYER_URL}} -H 'Authorization: Bearer ${{secrets.ENVOYER_TOKEN}}' -H 'Content-Type: application/json' | \
          jq '[.deployments[] | {id: .id, created: .created_at, status}] | sort_by(.date) | .[0]' > response.json && \
          STATUS=$( jq '.status response.json' ) && echo $STATUS && \
          echo "Sleeping.." && \
          sleep 10
          
      - name: Check Status
        run: |
          curl -X GET ${{secrets.ENVOYER_URL}} -H 'Authorization: Bearer ${{secrets.ENVOYER_TOKEN}}' -H 'Content-Type: application/json' | \
          jq '[.deployments[] | {id: .id, created: .created_at, status}] | sort_by(.date) | .[0]' > response.json && \
          STATUS=$(jq ".status response.json") && echo $STATUS && \
          echo "Sleeping.." && \
          sleep 10




      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://stagesop.apgteam.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}


